@model EmployeeDirectory.Models.EmployeeModel
@{
    ViewBag.Title = "EmployeeForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>    
}

<h2>Add Employee Form</h2>


@{
    if (TempData["FailedMessage"] != null)
    {
        <p class="text-danger">@TempData["FailedMessage"].</p>
    }
}
@{
    if (TempData["SuccessMessage"] != null)
    {
        <p class="text-success">@TempData["SuccessMessage"].</p>
    }
}


@using (Html.BeginForm("Save", "Employees"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName)
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(m => m.JobTitle)
        @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Location)
        @Html.TextBoxFor(m => m.Location, new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        <label>            
            Is Admin 
            @Html.CheckBoxFor(m => m.IsAdmin, new { @class = "form-control" })
        </label>
    </div>
    @Html.HiddenFor(m => m.EmployeeId)
    <button type="submit" class="btn btn-primary">Save</button>
}

